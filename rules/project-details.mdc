---
description: 
globs: 
alwaysApply: true
---
---
description: 
globs: 
alwaysApply: true
---
---
title: プロジェクト機能詳細
tags: [feature, design, api, discord, steam, rawg, isthereanydeal]
---
# プロジェクト機能詳細

このドキュメントは、Steam Game Suggester Discord Botの各機能に関する詳細な設計情報を記述します。AIは、これらの仕様に基づいて開発を進めてください。

**開発全体のルール**: [development-guidelines.mdc](mdc:.cursor/rules/development-guidelines.mdc)

## 優先度定義
- ⭐ **高**: ボットのコア機能であり、最初に実装すべきもの。
- ⭐ **中**: ボットの価値を高める重要な機能。コア機能が安定した後に実装。
- ⭐ **低**: あると便利だが、必須ではない機能。リソースがあれば実装。

## 1. 機能別詳細設計

### 1.1. 📚 特定ゲーム情報検索 (`/steam info <ゲーム名>`) - 優先度: ⭐高
- **機能**: ユーザーが入力したゲーム名に最も近いゲームの情報を表示します。
- **スラッシュコマンド**: `/steam info options: [{name: 'ゲーム名', type: 'STRING', required: true}]`
- **表示情報 (Embed)**:
    - タイトル: ゲーム名 (Steamストアページへのリンク付き)
    - 説明: ゲームの簡単な概要
    - フィールド: ジャンル, 評価, 価格, リリース日
    - 画像: ゲームのヘッダー画像
    - フッター: データ取得元
- **実装フロー**:
    1. キャッシュされたSteamゲームリスト (`GetAppList` の結果) をロードします。
    2. ユーザー入力の `<ゲーム名>` とリスト内のゲーム名を比較し、App IDを特定します (部分一致、`string-similarity`等のライブラリ利用を検討)。
    3. 特定したApp IDでSteam Web API (`appdetails`) または RAWG APIからゲーム詳細情報を非同期で取得します (`axios` や `node-fetch` を使用)。
    4. 取得した情報を元に `MessageEmbed` を作成します。
    5. `interaction.reply({ embeds: [embed] })` で応答します。
    6. 該当ゲームが見つからない場合は、その旨を通知します。
- **Components v2 活用案 (オプション)**: 複数の候補が見つかった場合、`SelectMenu` でユーザーに選択させます。
- **API利用**: Steam Web API (`GetAppList` キャッシュ, `appdetails`), RAWG API (補完情報)。
- **注意点**: 検索ロジックの精度、APIエラーハンドリング (タイムアウト、404等) を確実に行ってください。

### 1.2. 🔰 ランダムおすすめゲーム (`/steam おすすめ` または `/steam ランダム`) - 優先度: ⭐高
- **機能**: Steamで販売されている全ゲームからランダムに1つ選択し、情報を表示します。
- **スラッシュコマンド**: `/steam おすすめ` (サブコマンド `/steam random` もエイリアスとして登録可能)
- **表示情報 (Embed)**: 1.1. と同様。
- **実装フロー**:
    1. キャッシュされたSteamゲームリストからランダムにApp IDを1つ選択します。
    2. 選択されたApp IDを使用して、1.1. と同様にゲーム詳細情報を取得し、Embedで表示します。
- **Components v2 活用案**: Embedと一緒に「別のゲームをおすすめ」ボタン (`Button`) を表示し、押されると同じ処理を再度実行します。
- **API利用**: Steam Web API (`GetAppList` キャッシュ, `appdetails`), RAWG API。

### 1.3. 📚 今日のセール情報 (`/steam お得な情報`) - 優先度: ⭐中
- **機能**: 現在Steamでセール中のゲーム情報をいくつかピックアップして表示します。
- **スラッシュコマンド**: `/steam お得な情報`
- **表示情報 (Embed)**: 1.1. と同様。価格フィールドには割引率と元の価格を明記します。複数のゲームを表示する場合、Embedを複数送信するか、ページネーションを検討します。
- **実装フロー**:
    1. IsThereAnyDeal APIを利用して、Steamプラットフォームの現在のセール情報を非同期で取得します。
    2. 取得したセール情報から、表示するゲームをいくつか選定します (例: 割引率が高い順、人気順など)。
    3. 選定した各ゲームの詳細情報を取得し、Embedを作成します。
- **Components v2 活用案**:
    - 複数のセール情報を表示する場合、`Button` によるページネーション (「前へ」「次へ」) を実装します。
    - 各ゲームのEmbedに「Steamストアで見る」`Button` (Linkスタイル) を設置します。
- **API利用**: IsThereAnyDeal API。ゲーム詳細取得にSteam Web API/RAWG API。
- **注意点**: 表示する情報量と見やすさのバランス、APIのレートリミットに注意してください。

### 1.4. 📚 ジャンル指定おすすめゲーム (`/steam genre <ジャンル名>`) - 優先度: ⭐中
- **機能**: ユーザーが指定したジャンルに合致するゲームの中から、ランダムに1つ選んでおすすめします。
- **スラッシュコマンド**: `/steam genre options: [{name: 'ジャンル名', type: 'STRING', required: true, choices: [...]}]` (主要ジャンルを `choices` で提示すると便利です)
- **表示情報 (Embed)**: 1.1. と同様。
- **実装フロー (RAWG API推奨)**:
    1. ユーザー指定の `<ジャンル名>` をRAWG APIのジャンル検索パラメータとして使用します。
    2. RAWG APIから該当ジャンルのゲームリストを非同期で取得します。
    3. リストからランダムに1ゲームを選択し、詳細情報を取得します。
    4. Embedで表示します。
- **Components v2 活用案**: 1.2. と同様に「別の<ジャンル名>ゲームをおすすめ」ボタンを表示します。
- **API利用**: RAWG API (ジャンル検索)。ゲーム詳細取得にSteam Web API/RAWG API。
- **注意点**: ユーザー入力のジャンル名の処理 (RAWG APIが対応する形式か)、対応ジャンルが少ない場合のメッセージを考慮してください。

### 1.5. 🏢 高評価ゲームのおすすめ (`/steam トップ評価` または `/steam 圧倒的`) - 優先度: ⭐中
- **機能**: Steamで「非常に好評」や「圧倒的に好評」などの高評価を得ているゲームの中から、ランダムに1つ選んでおすすめします。
- **スラッシュコマンド**: `/steam トップ評価` (サブコマンドで「圧倒的」など詳細な評価レベルを指定できるようにするのも可)
- **表示情報 (Embed)**: 1.1. と同様。評価フィールドには具体的な好評率とレビュー数を明記します。
- **実装フロー (RAWG API推奨)**:
    1. RAWG APIの評価フィルター機能 (例: `ordering=-metacritic` やタグ指定) を利用して高評価ゲームを検索します。
    2. 取得したリストからランダムに1ゲームを選択し、詳細情報を取得します。
    3. Embedで表示します。
- **Components v2 活用案**: 1.2. と同様に「別の高評価ゲームをおすすめ」ボタンを表示します。
- **API利用**: RAWG API (評価によるソート/フィルタリング)。ゲーム詳細取得にSteam Web API/RAWG API。

### 1.6. 📚 価格帯指定おすすめゲーム (`/steam price <最大価格>` または `/steam free`) - 優先度: ⭐低
- **機能**: 指定された価格以下のゲーム、または無料ゲームの中からランダムに選んでおすすめします。
- **スラッシュコマンド**:
    - `/steam price options: [{name: '最大価格', type: 'INTEGER', required: true}]`
    - `/steam free`
- **表示情報 (Embed)**: 1.1. と同様。価格フィールドには、セール中の場合、割引率と元の価格も表示します。
- **実装フロー (IsThereAnyDeal API / RAWG API推奨)**:
    1. 価格条件をIsThereAnyDeal APIまたはRAWG APIの価格フィルター機能のパラメータとして使用します。
    2. 条件に合致するゲームリストを非同期で取得します。
    3. リストからランダムに1ゲームを選択し、詳細情報を取得します。
    4. Embedで表示します。
- **Components v2 活用案**: 1.2. と同様に「別の<価格帯>ゲームをおすすめ」ボタンを表示します。


- **API利用**: IsThereAnyDeal API, RAWG API。ゲーム詳細取得にSteam Web API/RAWG API。